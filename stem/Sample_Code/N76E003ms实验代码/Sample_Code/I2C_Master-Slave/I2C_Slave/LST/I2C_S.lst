C51 COMPILER V9.54   I2C_S                                                                 06/11/2018 16:58:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_S
OBJECT MODULE PLACED IN .\Output\I2C_S.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_S.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_S.lst) TABS(2) OBJECT(.\Output\I2C_S.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : May/1/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C Slave demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "SFR_Macro.h"
  22          #include "Function_define.h"
  23          
  24          //********************************************************************************************************
             -***
  25          //  N76E885-series I2C slave mode demo code, the Slave address = 0xA4
  26          //
  27          //   ____________            _____________ 
  28          //  |            |   SDA    |             |
  29          //  |            |<-------->|             |
  30          //  |            |          |             |
  31          //  |N76E003(M) |          | N76E003(S) |
  32          //  |(I2C_Master)|          | (I2C_Slave) |
  33          //  |            |   SCL    |             |
  34          //  |            |--------->|             |
  35          //  |____________|          |_____________|
  36          //
  37          //  The protocol of I2C is same the "24LC64"
  38          //********************************************************************************************************
             -***
  39          
  40          
  41          #define I2C_CLOCK               13
  42          #define EEPROM_SLA              0xA4
  43          
C51 COMPILER V9.54   I2C_S                                                                 06/11/2018 16:58:27 PAGE 2   

  44          
  45          UINT8 data_received[8], data_num = 0;
  46          UINT8 data_store[20],i=0,j=0;
  47          void Find(UINT8 num)
  48          {
  49   1          for(j=0;j<20;j++)
  50   1          {
  51   2            if(data_store[j] == num)
  52   2                  return ;
  53   2          }
  54   1      }
  55          
  56          //========================================================================================================
  57          void I2C_ISR(void) interrupt 6
  58          {
  59   1          switch (I2STAT)
  60   1          {
  61   2              case 0x00:
  62   2                  STO = 1;
  63   2                  break;
  64   2      
  65   2              case 0x60:
  66   2                  AA = 1;
  67   2                  //P3 = 0x60;
  68   2                  break;
  69   2              
  70   2              case 0x68:
  71   2                  P02 = 0;
  72   2                  while(1);
  73   2                  break;
  74   2      
  75   2              case 0x80:
  76   2                  //P3 = 0x80;
  77   2                  data_received[data_num] = I2DAT;
  78   2      
  79   2        
  80   2                  data_num++;
  81   2      
  82   2                  /*if (data_num == 34)
  83   2                      AA = 0;
  84   2                  else*/
  85   2                      AA = 1;
  86   2                  break;
  87   2      
  88   2              case 0x88:
  89   2                  //P3 = 0x88;
  90   2                  clr_GPIO1 ;
  91   2                  data_received[data_num] = I2DAT;
  92   2                  data_num = 0;
  93   2                  AA = 1;
  94   2                  break;
  95   2      
  96   2              case 0xA0:
  97   2                  //P3 = 0xA0;
  98   2                  AA = 1;
  99   2                  break;
 100   2      
 101   2              case 0xA8:
 102   2                  //P3 = 0xA0;//从这里开始读取需要的字符串
 103   2                  data_num = 0;
 104   2                  I2DAT = data_store[data_num];   
 105   2                  data_num++;
C51 COMPILER V9.54   I2C_S                                                                 06/11/2018 16:58:27 PAGE 3   

 106   2      
 107   2                  AA = 1;
 108   2                  break;
 109   2              
 110   2              case 0xB8:
 111   2                  //P3 = 0xB8;
 112   2      
 113   2                  I2DAT = data_store[data_num];
 114   2                  data_num++;
 115   2      #if 0
                          if(data_received [8]==0x00)
                            clr_GPIO1;
              #endif
 119   2                  AA = 1;
 120   2                  break;
 121   2      
 122   2              case 0xC0:
 123   2                  data_num = 0;                         //为下一次数据做准备
 124   2                  AA = 1;
 125   2      
 126   2                  break; 
 127   2      
 128   2              case 0xC8:
 129   2                  //P3 = 0xC8;
 130   2      
 131   2                  AA = 1;
 132   2                  break;        
 133   2          }
 134   1      
 135   1          SI = 0;
 136   1          
 137   1          while(SI != 0)
 138   1          {
 139   2              if(I2STAT == 0x00)
 140   2              {
 141   3                  set_STO;
 142   3              }
 143   2              SI = 0;
 144   2              if(SI != 0)
 145   2              {
 146   3                  clr_I2CEN;
 147   3                  set_I2CEN;
 148   3                  clr_SI;
 149   3                  //clr_I2CEN
 150   3              } 
 151   2          }
 152   1          
 153   1          while(STO);
 154   1      }
 155          
 156          //========================================================================================================
 157          void Init_I2C(void)
 158          {
 159   1      //    P13_Quasi_Mode;                         //set SCL (P13) is Quasi mode
 160   1      //    P14_Quasi_Mode;                         //set SDA (P14) is Quasi mode
 161   1      
 162   1        P13_OpenDrain_Mode;
 163   1        P14_OpenDrain_Mode; 
 164   1        
 165   1          SDA = 1;                                //set SDA and SCL pins high
 166   1          SCL = 1;
 167   1          
C51 COMPILER V9.54   I2C_S                                                                 06/11/2018 16:58:27 PAGE 4   

 168   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select.
 169   1          
 170   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 171   1          set_EA;
 172   1      
 173   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 174   1          set_I2CEN;                              //enable I2C circuit
 175   1          set_AA;
 176   1      }
 177          
 178          //========================================================================================================
 179          void main(void)
 180          {
 181   1      
 182   1          Set_All_GPIO_Quasi_Mode;
 183   1          
 184   1          /* Initial I2C function */
 185   1          Init_I2C();                                 //initial I2C circuit
 186   1        
 187   1          
 188   1          while (1)
 189   1          {
 190   2      #if 1
 191   2              if( data_num == 7 )
 192   2              {         
 193   3                  for(i=0;i<7;i++)
 194   3                  {
 195   4                    data_store[i] = data_received[i];
 196   4                  }
 197   3                  
 198   3                  Find(0x03);                                           //找到0x03后面的数据
 199   3                  if(data_store[j+1]==0x51 && data_store[j+2]==0x52)    //判断数据要做的事情
 200   3                  {
 201   4      //                clr_GPIO1;
 202   4                  }
 203   3                  
 204   3                  
 205   3              }
 206   2      #endif
 207   2          }
 208   1      /* =================== */
 209   1      }
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    307    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
