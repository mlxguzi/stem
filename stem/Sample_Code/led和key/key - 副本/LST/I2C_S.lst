C51 COMPILER V9.54   I2C_S                                                                 06/26/2018 20:40:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_S
OBJECT MODULE PLACED IN .\Output\I2C_S.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_S.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_S.lst) TABS(2) OBJECT(.\Output\I2C_S.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : May/1/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C Slave demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "SFR_Macro.h"
  22          #include "Function_define.h"
  23          
  24          //********************************************************************************************************
             -***
  25          //  N76E885-series I2C slave mode demo code, the Slave address = 0xA4
  26          //
  27          //   ____________            _____________ 
  28          //  |            |   SDA    |             |
  29          //  |            |<-------->|             |
  30          //  |            |          |             |
  31          //  |N76E003(M) |          | N76E003(S) |
  32          //  |(I2C_Master)|          | (I2C_Slave) |
  33          //  |            |   SCL    |             |
  34          //  |            |--------->|             |
  35          //  |____________|          |_____________|
  36          //
  37          //  The protocol of I2C is same the "24LC64"
  38          //********************************************************************************************************
             -***
  39          
  40          
  41          
  42          ///定时器参数
  43          #define TH0_INIT        10000 
C51 COMPILER V9.54   I2C_S                                                                 06/26/2018 20:40:17 PAGE 2   

  44          #define TL0_INIT        10000
  45          #define TH1_INIT        25000 
  46          #define TL1_INIT        25000
  47          UINT8 u8TH0_Tmp,u8TL0_Tmp,u8TH1_Tmp,u8TL1_Tmp;
  48          //UINT8 num1 = 0,key_num = 0,numm = 0 ,i = 0;
  49          
  50          //sbit KEY = P1^1;
  51          ///////////////////////////////////////////
  52          sbit key_input = P1^1;
  53          
  54          #define key_no     0    //no keys
  55          #define key_click  1    //click keys
  56          #define key_double 2    //double click
  57          #define key_long   3    //long click
  58          
  59          #define key_state_0   0
  60          #define key_state_1   1
  61          #define key_state_2   2
  62          #define key_state_3   3 //key states define
  63          
  64          #define key_flag  (1<<0)
  65          #define clear_key_flag  (~(1<<0))
  66          
  67          #define key_init()  (key_input = 1)
  68          extern UINT8 key_read();
  69          
  70          UINT8 timer_10ms_flag = 0;
  71          UINT8 key1;
  72          
  73          static unsigned char key_driver(void)
  74          {
  75   1        static unsigned char key_state_buffer1 = key_state_0;
  76   1        static unsigned char key_timer_cnt1 = 0;
  77   1        unsigned char key_return = key_no;
  78   1        unsigned char key;
  79   1        
  80   1        key = key_input;  //read the I/O states
  81   1        
  82   1        switch(key_state_buffer1)
  83   1        {
  84   2          case key_state_0:
  85   2            if(key == 0)
  86   2              key_state_buffer1 = key_state_1; 
  87   2              
  88   2            break;
  89   2          case key_state_1:
  90   2            if(key == 0)
  91   2            {
  92   3              key_timer_cnt1 = 0;
  93   3              key_state_buffer1 = key_state_2;
  94   3              
  95   3              
  96   3              
  97   3            }
  98   2            else
  99   2              key_state_buffer1 = key_state_0;
 100   2              
 101   2            break;  
 102   2          case key_state_2:
 103   2            if(key == 1) 
 104   2            {
 105   3              key_return = key_click;  
C51 COMPILER V9.54   I2C_S                                                                 06/26/2018 20:40:17 PAGE 3   

 106   3              key_state_buffer1 = key_state_0;  
 107   3            }
 108   2            else if(++key_timer_cnt1 >= 100)  
 109   2            {
 110   3              key_return = key_long;  
 111   3              key_state_buffer1 = key_state_3;  
 112   3            }
 113   2            break;
 114   2          case key_state_3:  
 115   2            if(key == 1) 
 116   2              key_state_buffer1 = key_state_0;  
 117   2            break;
 118   2        }
 119   1        return key_return;
 120   1      }
 121          
 122          unsigned char key_read(void)
 123          {
 124   1        static unsigned char key_state_buffer2 = key_state_0;
 125   1        static unsigned char key_timer_cnt2 = 0;
 126   1        unsigned char key_return = key_no;
 127   1        unsigned char key;
 128   1        
 129   1        key = key_driver();
 130   1        
 131   1        switch(key_state_buffer2)
 132   1        {
 133   2          case key_state_0:
 134   2            if(key == key_click)
 135   2            {
 136   3              key_timer_cnt2 = 0;  
 137   3              key_state_buffer2 = key_state_1;
 138   3            }
 139   2            else 
 140   2              key_return = key;  
 141   2            break;
 142   2          case key_state_1:
 143   2            if(key == key_click)  
 144   2            {
 145   3              key_return = key_double;  
 146   3              key_state_buffer2 = key_state_0;
 147   3            }
 148   2            else if(++key_timer_cnt2 >= 50)
 149   2            {
 150   3                        
 151   3              key_return = key_click;  
 152   3              key_state_buffer2 = key_state_0;  
 153   3                
 154   3            }
 155   2            break;
 156   2        }
 157   1        
 158   1        return key_return;
 159   1      }
 160          
 161          void Timer0_ISR (void) interrupt 1  //interrupt address is 0x000B
 162          {
 163   1        
 164   1          TH0 = u8TH0_Tmp;
 165   1          TL0 = u8TL0_Tmp;    
 166   1          timer_10ms_flag |= key_flag;
 167   1      
C51 COMPILER V9.54   I2C_S                                                                 06/26/2018 20:40:17 PAGE 4   

 168   1      }
 169          
 170          
 171          
 172          //========================================================================================================
 173          void main(void)
 174          {
 175   1          
 176   1          Set_All_GPIO_Quasi_Mode;
 177   1          P11_Quasi_Mode;
 178   1          P11 = 1;  
 179   1        
 180   1      //////////////////////////////////////定时器0
 181   1          TIMER0_MODE1_ENABLE;
 182   1          TIMER1_MODE1_ENABLE;
 183   1          
 184   1          clr_T0M;
 185   1          clr_T1M;  
 186   1        
 187   1          u8TH0_Tmp = (65536-TH0_INIT)/256;
 188   1          u8TL0_Tmp = (65536-TL0_INIT)%256;    
 189   1          u8TH1_Tmp = (65536-TH1_INIT)/256;
 190   1          u8TL1_Tmp = (65536-TL1_INIT)%256;
 191   1        
 192   1          TH0 = u8TH0_Tmp;
 193   1          TL0 = u8TL0_Tmp;
 194   1          TH1 = u8TH1_Tmp;
 195   1          TL1 = u8TL1_Tmp;
 196   1          
 197   1          set_ET0;                                    //enable Timer0 interrupt
 198   1          set_ET1;                                    //enable Timer1 interrupt
 199   1          set_EA;                                     //enable interrupts
 200   1        
 201   1          set_TR0;                                    //Timer0 run
 202   1          
 203   1          
 204   1          
 205   1          
 206   1      /////////////////////////////////////////////////////////////
 207   1      #if 1 
 208   1        while(1)
 209   1          {
 210   2              
 211   2              if(timer_10ms_flag&key_flag == 1)
 212   2              {
 213   3                  timer_10ms_flag &= clear_key_flag;            
 214   3                  key1 = key_read();
 215   3                
 216   3                  switch(key1)
 217   3                  {
 218   4                      case key_click:
 219   4                        clr_GPIO1;
 220   4                        break;
 221   4                      case key_double:
 222   4                        set_GPIO1;
 223   4                        break;
 224   4                      case key_long:
 225   4                        P12 = ~P12;
 226   4                        break;
 227   4                  }
 228   3              }
 229   2              
C51 COMPILER V9.54   I2C_S                                                                 06/26/2018 20:40:17 PAGE 5   

 230   2          
 231   2          }
 232   1      #endif      
 233   1            
 234   1            
 235   1      }
 236          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
