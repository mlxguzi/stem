C51 COMPILER V9.54   I2C_S                                                                 06/07/2018 18:34:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_S
OBJECT MODULE PLACED IN .\Output\I2C_S.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_S.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_S.lst) TABS(2) OBJECT(.\Output\I2C_S.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : May/1/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C Slave demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "SFR_Macro.h"
  22          #include "Function_define.h"
  23          
  24          //********************************************************************************************************
             -***
  25          //  N76E885-series I2C slave mode demo code, the Slave address = 0xA4
  26          //
  27          //   ____________            _____________ 
  28          //  |            |   SDA    |             |
  29          //  |            |<-------->|             |
  30          //  |            |          |             |
  31          //  |N76E003(M) |          | N76E003(S) |
  32          //  |(I2C_Master)|          | (I2C_Slave) |
  33          //  |            |   SCL    |             |
  34          //  |            |--------->|             |
  35          //  |____________|          |_____________|
  36          //
  37          //  The protocol of I2C is same the "24LC64"
  38          //********************************************************************************************************
             -***
  39          
  40          
  41          #define I2C_CLOCK               13
  42          #define EEPROM_SLA              0xA4
  43          
C51 COMPILER V9.54   I2C_S                                                                 06/07/2018 18:34:45 PAGE 2   

  44          
  45          UINT8 data_received[34], data_num = 0;
  46          
  47          //========================================================================================================
  48          void I2C_ISR(void) interrupt 6
  49          {
  50   1          switch (I2STAT)
  51   1          {
  52   2              case 0x00:
  53   2                  STO = 1;
  54   2                  break;
  55   2      
  56   2              case 0x60:
  57   2                  AA = 1;
  58   2                  //P3 = 0x60;
  59   2                  break;
  60   2              
  61   2              case 0x68:
  62   2                  P02 = 0;
  63   2                  while(1);
  64   2                  break;
  65   2      
  66   2              case 0x80:
  67   2                  //P3 = 0x80;
  68   2                  data_received[data_num] = I2DAT;
  69   2                  data_num++;
  70   2      
  71   2                  /*if (data_num == 34)
  72   2                      AA = 0;
  73   2                  else*/
  74   2                      AA = 1;
  75   2                  break;
  76   2      
  77   2              case 0x88:
  78   2                  //P3 = 0x88;
  79   2                  data_received[data_num] = I2DAT;
  80   2                  data_num = 0;
  81   2      
  82   2                  AA = 1;
  83   2                  break;
  84   2      
  85   2              case 0xA0:
  86   2                  //P3 = 0xA0;
  87   2                  AA = 1;
  88   2                  break;
  89   2      
  90   2              case 0xA8:
  91   2                  //P3 = 0xA0;
  92   2                  I2DAT = data_received[data_num];
  93   2                  data_num++;
  94   2                  AA = 1;
  95   2                  break;
  96   2              
  97   2              case 0xB8:
  98   2                  //P3 = 0xB8;
  99   2                  I2DAT = data_received[data_num];
 100   2                  data_num++;
 101   2                  AA = 1;
 102   2                  break;
 103   2      
 104   2              case 0xC0:
 105   2                  AA = 1;
C51 COMPILER V9.54   I2C_S                                                                 06/07/2018 18:34:45 PAGE 3   

 106   2                  break; 
 107   2      
 108   2              case 0xC8:
 109   2                  //P3 = 0xC8;
 110   2                  AA = 1;
 111   2                  break;        
 112   2          }
 113   1      
 114   1          SI = 0;
 115   1          
 116   1          while(SI != 0)
 117   1          {
 118   2              if(I2STAT == 0x00)
 119   2              {
 120   3                  set_STO;
 121   3              }
 122   2              SI = 0;
 123   2              if(SI != 0)
 124   2              {
 125   3                  clr_I2CEN;
 126   3                  set_I2CEN;
 127   3                  clr_SI;
 128   3                  //clr_I2CEN
 129   3              } 
 130   2          }
 131   1          
 132   1          while(STO);
 133   1      }
 134          
 135          //========================================================================================================
 136          void Init_I2C(void)
 137          {
 138   1      //    P13_Quasi_Mode;                         //set SCL (P13) is Quasi mode
 139   1      //    P14_Quasi_Mode;                         //set SDA (P14) is Quasi mode
 140   1          SDA = 1;                                //set SDA and SCL pins high
 141   1          SCL = 1;
 142   1        P13_OpenDrain_Mode;
 143   1        P14_OpenDrain_Mode; 
 144   1      
 145   1          
 146   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select.
 147   1          
 148   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 149   1          set_EA;
 150   1      
 151   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 152   1          set_I2CEN;                              //enable I2C circuit
 153   1          set_AA;
 154   1      }
 155          
 156          //========================================================================================================
 157          void main(void)
 158          {
 159   1      
 160   1          Set_All_GPIO_Quasi_Mode;
 161   1          
 162   1          /* Initial I2C function */
 163   1          Init_I2C();                                 //initial I2C circuit
 164   1      
 165   1          while (1)
 166   1          {
 167   2      /*    while(AA);                  //判断主机是否发送完数据
C51 COMPILER V9.54   I2C_S                                                                 06/07/2018 18:34:45 PAGE 4   

 168   2          for( i=state; i<7 ; i++ )
 169   2          {
 170   2            data_slave[i] = data_received[i];
 171   2            data_num = 0;
 172   2            state++;
 173   2          }
 174   2      */    
 175   2          
 176   2          }
 177   1      /* =================== */
 178   1      }
 179          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
