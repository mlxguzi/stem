C51 COMPILER V9.54   I2C_M                                                                 06/19/2018 10:45:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_M
OBJECT MODULE PLACED IN .\Output\I2C_M.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_M.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Common;..\..\Include) DE
                    -FINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_M.lst) TABS(2) OBJECT(.\Output\I2C_M.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "WS281X.h"
   4          #include "Delay.h"
   5          #include "SFR_Macro.h"
   6          #include "Function_define.h"
   7          #include "intrins.h"
   8          #include "WS281X.h"
   9          #include "string.h"
  10          
  11          
  12          /* Private variables ---------------------------------------------------------*/
  13          #define TH0_INIT        1300 
  14          #define TL0_INIT        1300          //定时器
  15          
  16          U8 data1[30] = {0x51,0x11,0xf1,0x51,0x11,0xf1,0x51,0x11,0xf1,0x51,0x11,0xf1,0x51,0x11,0xf1,0x51,0x11,0xf1,
             -0x51,0x11,0xf1,0x51,0x11,0xf1,0x10};
  17          
  18          #define I2C_CLOCK               13                  //iic传输速率
  19          #define EEPROM_SLA              0x40                //从机地址  
  20          
  21          U8 xdata data_received[120], data_num = 0;
  22          U8 xdata data_store[350];
  23          U8 i=0,j=0,flag=0;
  24          U8 u8TH0_Tmp,u8TL0_Tmp;
  25            
  26          void I2C_ISR(void) interrupt 6
  27          {
  28   1          switch (I2STAT)
  29   1          {
  30   2              case 0x00:
  31   2                  STO = 1;
  32   2                  break;
  33   2      
  34   2              case 0x60:
  35   2                  AA = 1;
  36   2                  break;
  37   2              
  38   2              case 0x68:
  39   2                  P02 = 0;
  40   2                  while(1);
  41   2                  break;
  42   2      
  43   2              case 0x80:                                        //接收数据
  44   2                  data_received[data_num] = I2DAT;
  45   2                  data_num++;
  46   2              
  47   2                      AA = 1;
  48   2                  break;
  49   2      
  50   2              case 0x88:                                        //错误时归零
  51   2                  data_received[data_num] = I2DAT;
  52   2                  data_num = 0;
  53   2                  AA = 1;
C51 COMPILER V9.54   I2C_M                                                                 06/19/2018 10:45:23 PAGE 2   

  54   2                  break;
  55   2                
  56   2              case 0xA0:
  57   2                  AA = 1;
  58   2                  break;
  59   2      
  60   2              case 0xA8:                        
  61   2                  data_num = 0;
  62   2                  I2DAT = data_store[data_num];   
  63   2                  data_num++;
  64   2                  AA = 1;
  65   2                  break;
  66   2              
  67   2              case 0xB8:
  68   2                  I2DAT = data_store[data_num];
  69   2                  data_num++;
  70   2                  AA = 1;
  71   2                  break;
  72   2      
  73   2              case 0xC0:
  74   2                  data_num = 0;                         //为下一次数据做准备
  75   2      
  76   2                  AA = 1;
  77   2      
  78   2                  break; 
  79   2      
  80   2              case 0xC8:
  81   2                
  82   2                  AA = 1;
  83   2                  break;  
  84   2              
  85   2          }
  86   1      
  87   1          SI = 0;   
  88   1          while(SI != 0)
  89   1          {
  90   2              if(I2STAT == 0x00)
  91   2              {
  92   3                  set_STO;
  93   3              }
  94   2              SI = 0;
  95   2              if(SI != 0)
  96   2              {
  97   3                  clr_I2CEN;
  98   3                  set_I2CEN;
  99   3                  clr_SI;
 100   3                  //clr_I2CEN
 101   3              } 
 102   2          }   
 103   1          while(STO);
 104   1      }
 105          void Timer0_ISR (void) interrupt 1  //interrupt address is 0x000B
 106          {
 107   1          TH0 = u8TH0_Tmp;
 108   1          TL0 = u8TL0_Tmp;    
 109   1          i++;
 110   1          j++;
 111   1                          // GPIO1 toggle when interrupt
 112   1      }
 113          void Init_I2C(void)
 114          {
 115   1          P13_OpenDrain_Mode;
C51 COMPILER V9.54   I2C_M                                                                 06/19/2018 10:45:23 PAGE 3   

 116   1          P14_OpenDrain_Mode;   
 117   1          SDA = 1;                                //set SDA and SCL pins high
 118   1          SCL = 1;   
 119   1        
 120   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select. 
 121   1        
 122   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 123   1          set_EA;
 124   1      
 125   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 126   1          set_I2CEN;                              //enable I2C circuit
 127   1          set_AA;
 128   1      }
 129          void time_d(U8 a)
 130          {
 131   1          set_TR0;
 132   1          while( a != i );
 133   1          clr_TR0;
 134   1      
 135   1      }
 136          void main(void)
 137          {
 138   1          
 139   1          Set_All_GPIO_Quasi_Mode;
 140   1      #if 1   
 141   1          TIMER0_MODE1_ENABLE;  
 142   1          u8TH0_Tmp = (65536-TH0_INIT)/256;
 143   1          u8TL0_Tmp = (65536-TL0_INIT)%256; 
 144   1        
 145   1          TH0 = u8TH0_Tmp;
 146   1          TL0 = u8TL0_Tmp;
 147   1        
 148   1          set_ET0;                                    //enable Timer0 interrupt
 149   1          set_EA;                                     //enable interrupts
 150   1      #endif  
 151   1          memset(data_received,0x00,sizeof(data_received));       //清零，防止后面处理数据时拿取的数据出错
 152   1          memset(data_store,0x00,sizeof(data_store));
 153   1          
 154   1          
 155   1        
 156   1          Init_I2C();
 157   1          
 158   1      
 159   1          while (1)
 160   1          {
 161   2      #if 1
 162   2              if(I2STAT == 0xA0)                        //主机发送数据结束标志
 163   2              {                   
 164   3                  i=0;
 165   3                  while(data_received[i] != 0x00)
 166   3                  {
 167   4                      data_store[i] = data_received[i+3] ;
 168   4                      i++;
 169   4                  }         
 170   3                  flag = 1;
 171   3                  data_num = 0;
 172   3                for(i=0;i<10;i++)
 173   3                {
 174   4                  if(data_store[i]==0x50)
 175   4                  clr_GPIO1;
 176   4                }
 177   3                
C51 COMPILER V9.54   I2C_M                                                                 06/19/2018 10:45:23 PAGE 4   

 178   3              }
 179   2               
 180   2                      
 181   2              
 182   2      #if 1     
 183   2              if( flag == 1 )                           //处理数据
 184   2              {         
 185   3                  for(i=0;i<4;i++)
 186   3                  {
 187   4                      if(i!=0)
 188   4                      { 
 189   5                          WS_frame_asyn(&(data_store+i*24+i));
 190   5                          time_d(data_store[i*24+i-1]);               
 191   5                      }
 192   4                      else
 193   4                      {
 194   5                          WS_frame_asyn(data_store);
 195   5                          time_d(data_store[24]);
 196   5                      }
 197   4                  } 
 198   3                  
 199   3                      
 200   3                  flag=0;
 201   3              }
 202   2      #endif        
 203   2              
 204   2      #endif
 205   2          }
 206   1      }
 207          
 208          
 209          /************************ (C) COPYRIGHT OAZON ******************END OF FILE****/
 210          
 211          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    471    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
