C51 COMPILER V9.54   I2C_S                                                                 06/05/2018 15:55:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_S
OBJECT MODULE PLACED IN .\Output\I2C_S.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_S.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_S.lst) TABS(2) OBJECT(.\Output\I2C_S.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : May/1/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C Slave demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "SFR_Macro.h"
  22          #include "Function_define.h"
  23          
  24          //********************************************************************************************************
             -***
  25          //  N76E885-series I2C slave mode demo code, the Slave address = 0xA4
  26          //
  27          //   ____________            _____________ 
  28          //  |            |   SDA    |             |
  29          //  |            |<-------->|             |
  30          //  |            |          |             |
  31          //  |N76E003(M) |          | N76E003(S) |
  32          //  |(I2C_Master)|          | (I2C_Slave) |
  33          //  |            |   SCL    |             |
  34          //  |            |--------->|             |
  35          //  |____________|          |_____________|
  36          //
  37          //  The protocol of I2C is same the "24LC64"
  38          //********************************************************************************************************
             -***
  39          
  40          
  41          #define I2C_CLOCK               13
  42          #define EEPROM_SLA              0xA4
  43          
C51 COMPILER V9.54   I2C_S                                                                 06/05/2018 15:55:19 PAGE 2   

  44          
  45          UINT8 data_received[7], data_num = 0 ,j = 0;
  46          UINT8 data_slave[34];
  47          UINT8 state = 0,i = 0,state_data = 0;
  48          
  49          #define LED_1  P10 = 0;P10 = 1;
  50          #define LED_0  P10 = 1;P10 = 0;
  51          void Find(UINT8 num)
  52          {
  53   1          for(j=0;j<34;j++)
  54   1          {
  55   2            if(data_received[j] == num)
  56   2                  return ;
  57   2          }
  58   1      }
  59          
  60          
  61          //========================================================================================================
  62          void I2C_ISR(void) interrupt 6
  63          {
  64   1          switch (I2STAT)
  65   1          {
  66   2              case 0x00:
  67   2                  STO = 1;
  68   2                  break;
  69   2      
  70   2              case 0x60:
  71   2                  AA = 1;
  72   2                  break;
  73   2              
  74   2              case 0x68:
  75   2                  P02 = 0;
  76   2                  while(1);
  77   2                  break;
  78   2      
  79   2              case 0x80:
  80   2                  //P3 = 0x80;
  81   2                  data_received[data_num] = I2DAT;
  82   2                  data_num++;
  83   2              
  84   2                  if (data_num == 7)
  85   2                      AA = 0;
  86   2                  else
  87   2                      AA = 1;
  88   2                  break;
  89   2              case 0x88:
  90   2                  //P3 = 0x88;
  91   2                  data_received[data_num] = I2DAT;
  92   2                  data_num = 0;
  93   2                  AA = 1;
  94   2                  break;
  95   2      
  96   2              case 0xA0:
  97   2                  //P3 = 0xA0;
  98   2                  AA = 1;
  99   2                  break;
 100   2       
 101   2              case 0xA8:
 102   2                  //P3 = 0xA0;
 103   2                 I2DAT = 0x00;//data_received[data_num];
 104   2                 data_num++;
 105   2                  AA = 1;
C51 COMPILER V9.54   I2C_S                                                                 06/05/2018 15:55:19 PAGE 3   

 106   2                  break;
 107   2              
 108   2              case 0xB8:
 109   2                  
 110   2                  I2DAT = data_slave[state_data];  //根据主机发送的信号返回相应数据
 111   2                  
 112   2                  state_data++;
 113   2              
 114   2      //          data_num++;
 115   2      
 116   2                  AA = 1;
 117   2                  break;
 118   2      
 119   2              case 0xC0:
 120   2                  AA = 1;
 121   2                  break; 
 122   2      
 123   2              case 0xC8:
 124   2                  //P3 = 0xC8;
 125   2                  AA = 1;
 126   2                  break;        
 127   2          }
 128   1      
 129   1          SI = 0;
 130   1      //    while(STO);
 131   1      }
 132          
 133          //========================================================================================================
 134          void Init_I2C(void)
 135          {
 136   1          P13_Quasi_Mode;                         //set SCL (P13) is Quasi mode
 137   1          P14_Quasi_Mode;                         //set SDA (P14) is Quasi mode
 138   1          
 139   1          SDA = 1;                                //set SDA and SCL pins high
 140   1          SCL = 1;
 141   1          
 142   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select.
 143   1          
 144   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 145   1          set_EA;
 146   1      
 147   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 148   1          set_I2CEN;                              //enable I2C circuit
 149   1          set_AA;
 150   1      }
 151          
 152          //========================================================================================================
 153          void main(void)
 154          {
 155   1          
 156   1          Set_All_GPIO_Quasi_Mode;
 157   1          
 158   1          /* Initial I2C function */
 159   1          Init_I2C();                                 //initial I2C circuit
 160   1          /*while(1)
 161   1          {
 162   1            if( data_numT == 7 )
 163   1            {
 164   1              for(i = 0;i<34;i++)
 165   1              {
 166   1                if(data_received[i] == 0x03)
 167   1                    break;
C51 COMPILER V9.54   I2C_S                                                                 06/05/2018 15:55:19 PAGE 4   

 168   1              }
 169   1            }
 170   1          }*/
 171   1          while(AA);                  //判断主机是否发送完数据
 172   1          for( i=state; i<7 ; i++ )
 173   1          {
 174   2            data_slave[i] = data_received[i];
 175   2            data_num = 0;
 176   2            state++;
 177   2          }
 178   1          
 179   1          
 180   1          Find(0x03); 
 181   1          if( (data_slave[j+1]==0x51) && (data_slave[j+2]==0x52) )
 182   1          {
 183   2                  P10_PushPull_Mode;
 184   2                  LED_1;                                        //判断接收的数据并执行要求
 185   2                  Timer0_Delay1ms(30);
 186   2                  LED_0;
 187   2          }
 188   1      /*
 189   1          while(  I2STAT==0xA8 );
 190   1          switch( data_received[0] )
 191   1          {
 192   1            case 0x01:
 193   1                      state_data = 0;
 194   1                      break;
 195   1            case 0x02:
 196   1                      state_data = 2;
 197   1                      break;
 198   1            case 0x03:
 199   1                      state_data = 4; 
 200   1                      break;
 201   1          }
 202   1       */ 
 203   1          while (1);
 204   1      /* =================== */
 205   1      }
 206          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     46    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
