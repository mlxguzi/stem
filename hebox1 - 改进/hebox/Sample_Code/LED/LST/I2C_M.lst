C51 COMPILER V9.54   I2C_M                                                                 06/27/2018 16:46:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_M
OBJECT MODULE PLACED IN .\Output\I2C_M.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE Code\I2C_M.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Common;..\..\Include) DE
                    -FINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_M.lst) TABS(2) OBJECT(.\Output\I2C_M.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "WS281X.h"
   4          #include "Delay.h"
   5          #include "SFR_Macro.h"
   6          #include "Function_define.h"
   7          #include "intrins.h"
   8          #include "WS281X.h"
   9          #include "string.h"
  10          
  11          
  12          /* Private variables ---------------------------------------------------------*/
  13          #define TH0_INIT        1300 
  14          #define TL0_INIT        1300          //¶¨Ê±Æ÷
  15          
  16          
  17          #define I2C_CLOCK               13                  //iic´«ÊäËÙÂÊ
  18          #define EEPROM_SLA              0x40                //´Ó»úµØÖ·  
  19          
  20          U8 xdata data_received[100], data_num = 0,num = 0,data_flag = 0,ll = 0;
  21          U8 xdata data_store[350];
  22          U8 i=0,j=0,flag=0,begin_flag = 0;
  23          U8 u8TH0_Tmp,u8TL0_Tmp;
  24            
  25          void I2C_ISR(void) interrupt 6
  26          {
  27   1          switch (I2STAT)
  28   1          {
  29   2      #if 0
                      case 0x00:
                          STO = 1;
                          break;
              #endif
  34   2              case 0x60:
  35   2                  data_num = 0;
  36   2      
  37   2                  memset(data_received,0x00,sizeof(data_received));
  38   2                  data_flag = 1;
  39   2                  AA = 1;
  40   2      
  41   2                  break;
  42   2      #if 0       
                      case 0x68:
                          P02 = 0;
                          while(1);
                          break;
              #endif
  48   2              case 0x80:                                        //½ÓÊÕÊý¾Ý
  49   2                  data_received[data_num] = I2DAT;
  50   2                  data_num++;
  51   2      //            if(data_received[27]==0x10)
  52   2      //              clr_GPIO1;
  53   2      
  54   2                  AA = 1;
C51 COMPILER V9.54   I2C_M                                                                 06/27/2018 16:46:01 PAGE 2   

  55   2                  break;
  56   2      #if 0
                      case 0x88:                                        //´íÎóÊ±¹éÁã
                          data_received[data_num] = I2DAT;
                          data_num = 0;
                          clr_GPIO1;
                          AA = 1;
                          break;
              #endif          
  64   2              case 0xA0:
  65   2      /*******************************************************************************
  66   2      Ö÷»ú·¢ËÍÍ£Ö¹Î»£¬³ÌÐòÃ¿´Î¶¼»áÖ´ÐÐµ«ÊÇÓÐÊ±ºòÅÐ¶Ï²»µ½£¬ËùÒÔ¸ÄÎªÅÐ¶ÏÊý¾ÝÖµ
  67   2      *******************************************************************************/
  68   2                  
  69   2                  begin_flag = 1; 
  70   2                  AA = 1;
  71   2                  
  72   2                  break;
  73   2      
  74   2              case 0xA8:                        
  75   2                  ll = 0;
  76   2      //          I2DAT = data_received[data_num];
  77   2                  I2DAT = data_store[ll];   
  78   2                  ll++;
  79   2                  AA = 1;
  80   2                  break;
  81   2              
  82   2              case 0xB8:
  83   2      //            I2DAT = data_received[data_num];          
  84   2                  I2DAT = data_store[ll];
  85   2                  ll++;
  86   2                  AA = 1;
  87   2                  break;
  88   2      
  89   2              case 0xC0:              
  90   2                  data_num = 0;                         //ÎªÏÂÒ»´ÎÊý¾Ý×ö×¼±¸
  91   2              
  92   2                  memset(data_received,0x00,sizeof(data_received)); 
  93   2                  memset(data_store,0x00,sizeof(data_store));       
  94   2                  i = 0;
  95   2                  ll = 0;
  96   2                  AA = 1;
  97   2      
  98   2                  break; 
  99   2      #if 0
                      case 0xC8:
                          AA = 1;
                          break;  
              #endif        
 104   2          }
 105   1      
 106   1          SI = 0;   
 107   1          while(SI != 0)
 108   1          {
 109   2              if(I2STAT == 0x00)
 110   2              {
 111   3                  set_STO;
 112   3              }
 113   2              SI = 0;
 114   2              if(SI != 0)
 115   2              {
 116   3                  clr_I2CEN;
C51 COMPILER V9.54   I2C_M                                                                 06/27/2018 16:46:01 PAGE 3   

 117   3                  set_I2CEN;
 118   3                  clr_SI;
 119   3                  //clr_I2CEN
 120   3              } 
 121   2          }   
 122   1          while(STO);
 123   1      }
 124          void Timer0_ISR (void) interrupt 1  //interrupt address is 0x000B
 125          {
 126   1          TH0 = u8TH0_Tmp;
 127   1          TL0 = u8TL0_Tmp;    
 128   1      
 129   1          j++;
 130   1                          // GPIO1 toggle when interrupt
 131   1      }
 132          void Init_I2C(void)
 133          {
 134   1          P13_OpenDrain_Mode;
 135   1          P14_OpenDrain_Mode;   
 136   1          SDA = 1;                                //set SDA and SCL pins high
 137   1          SCL = 1;   
 138   1        
 139   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select. 
 140   1        
 141   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 142   1          set_EA;
 143   1      
 144   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 145   1          set_I2CEN;                              //enable I2C circuit
 146   1          set_AA;
 147   1      }
 148          void time_d(U8 a)
 149          {
 150   1          set_TR0;
 151   1          while( a != j );
 152   1          clr_TR0;
 153   1          j = 0;
 154   1      }
 155          void main(void)
 156          {
 157   1          
 158   1          Set_All_GPIO_Quasi_Mode;
 159   1      #if 1   
 160   1          TIMER0_MODE1_ENABLE;  
 161   1          u8TH0_Tmp = (65536-TH0_INIT)/256;
 162   1          u8TL0_Tmp = (65536-TL0_INIT)%256; 
 163   1        
 164   1          TH0 = u8TH0_Tmp;
 165   1          TL0 = u8TL0_Tmp;
 166   1        
 167   1          set_ET0;                                    //enable Timer0 interrupt
 168   1          set_EA;                                     //enable interrupts
 169   1      #endif  
 170   1          memset(data_received,0x00,sizeof(data_received));       //ÇåÁã£¬·ÀÖ¹ºóÃæ´¦ÀíÊý¾ÝÊ±ÄÃÈ¡µÄÊý¾Ý³ö´í
 171   1          memset(data_store,0x00,sizeof(data_store));
 172   1          
 173   1          
 174   1          Init_I2C();
 175   1      //    set_TR0;
 176   1      
 177   1          while (1)
 178   1          {
C51 COMPILER V9.54   I2C_M                                                                 06/27/2018 16:46:01 PAGE 4   

 179   2      #if 1 
 180   2      
 181   2              if( begin_flag == 1)//data_num == 28)//(I2STAT == 0xA0) && (data_flag==1) )                       //Ö÷»ú·¢ËÍÊý¾Ý½
             -áÊø±êÖ¾
 182   2              { 
 183   3                      
 184   3                      
 185   3                      for( num=0;num<22;num++ )
 186   3                      {
 187   4                          data_store[i] = data_received[num+3]; 
 188   4                          i++;
 189   4                      }
 190   3                      if(data_received[2]>0x80)
 191   3                      {
 192   4                        flag = 1;
 193   4                        clr_GPIO1;
 194   4                      }
 195   3      
 196   3                      data_num = 0;     
 197   3                      begin_flag = 0;
 198   3              }         
 199   2              
 200   2      #if 1     
 201   2        
 202   2              if( flag == 1 )                           
 203   2              {         
 204   3                  data_flag = 0;  
 205   3                
 206   3      //Ð§¹ûµÆÆÚ¼äÓÐÐÂÊý¾Ý·¢ËÍ¹ýÀ´ÔòÍË³ö  
 207   3                  while(!data_flag)
 208   3                  {                           
 209   4      
 210   4      //´¦ÀíÊý¾Ý      
 211   4                        for(i=0;i<(data_received[2]-0x80);i++)
 212   4                        {   
 213   5      //¶à¼ÓÒ»¸ödata_flagÅÐ¶Ï£¬·ñÔòÃ¿´ÎÌø³ö»á³öÏÖµÆÂÒÉÁ                   
 214   5                          if(data_flag!=1)
 215   5                          {                                               
 216   6                              WS_frame_asyn(&(data_store+i*21+i));
 217   6                              time_d(data_store[(i+1)*21+i]);
 218   6                          }                     
 219   5                        }           
 220   4                                    
 221   4                  } 
 222   3                              ring_display_clear(); 
 223   3      //Çå¿ÕÊý¾Ý£¬ÎªÏÂ´ÎÊý¾Ý×ö×¼±¸
 224   3                              memset(data_store,0x00,sizeof(data_store));
 225   3                              i = 0;
 226   3                              flag=0;   
 227   3                          
 228   3              }
 229   2      
 230   2      #endif        
 231   2              
 232   2      #endif
 233   2          }
 234   1      }
 235          
 236          
 237          /************************ (C) COPYRIGHT OAZON ******************END OF FILE****/
 238          
 239          
C51 COMPILER V9.54   I2C_M                                                                 06/27/2018 16:46:01 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    609    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    454    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
